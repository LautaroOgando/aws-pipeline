version: 0.2
phases:
  install:
    commands:
      - echo "Actualizando paquetes e instalando wget y grep si es necesario..."
      - apt-get update -y
      - apt-get install -y wget grep # wget es necesario para descargar, grep para -oP

      - echo "Instalando Hugo..."
      # Cada comando se ejecuta individualmente o en bloques lógicos
      - |
        #!/bin/bash
        HUGO_VERSION=$(wget -qO- https://api.github.com/repos/gohugoio/hugo/releases/latest | grep -oP '"tag_name": "\Kv[^"]+')
        echo "Última versión de Hugo detectada: ${HUGO_VERSION}"
      - |
        #!/bin/bash
        HUGO_TARBALL="hugo_extended_${HUGO_VERSION#v}_linux-amd64.tar.gz"
        echo "Descargando ${HUGO_TARBALL}..."
        wget "https://github.com/gohugoio/hugo/releases/download/${HUGO_VERSION}/${HUGO_TARBALL}"
      - echo "Extrayendo Hugo..."
      - tar -xzf ${HUGO_TARBALL} hugo
      - echo "Moviendo Hugo a /usr/local/bin..."
      - sudo mv hugo /usr/local/bin/hugo
      - echo "Verificando la versión de Hugo instalada:"
      - hugo version

  build:
    commands:
      - echo "Construyendo sitio Hugo..."
      - hugo

artifacts:
  files:
    - '**/*' # Incluye todos los archivos generados por Hugo dentro de 'public'
    - 'appspec.yml' # Incluye el appspec.yml desde la raíz del repositorio
    - 'scripts/**/*' # Incluye todos los scripts de la carpeta 'scripts'
  base-directory: public # La carpeta 'public' será la raíz del contenido web en el artefacto
